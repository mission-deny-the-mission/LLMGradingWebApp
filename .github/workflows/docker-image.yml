name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build_push:

    runs-on: ubuntu-latest

    steps:

    - name: Generate tags
      id: generate-tags
      shell: bash
      run: |
        # Generate a timestamp for creating an image version history
        TIMESTAMP="$(date +%Y%m%d)"
        COMMIT_TAGS=()
        BUILD_TAGS=()

        # Have tags for tracking builds during pull request
        SHA_SHORT="${GITHUB_SHA::7}"
        COMMIT_TAGS+=("pr-${{ github.event.number }}")
        COMMIT_TAGS+=("${SHA_SHORT}")

        # Append matching timestamp tags to keep a version history
        for TAG in "${BUILD_TAGS[@]}"; do
            BUILD_TAGS+=("${TAG}-${TIMESTAMP}")
        done

        BUILD_TAGS+=("${TIMESTAMP}")
        BUILD_TAGS+=("latest")

        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "Generated the following commit tags: "
            for TAG in "${COMMIT_TAGS[@]}"; do
                echo "${TAG}"
            done

            alias_tags=("${COMMIT_TAGS[@]}")
        else
            alias_tags=("${BUILD_TAGS[@]}")
        fi

        echo "Generated the following build tags: "
        for TAG in "${BUILD_TAGS[@]}"; do
            echo "${TAG}"
        done

        echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

    # Build metadata
    - name: Image Metadata
      uses: docker/metadata-action@v5
      id: meta
      with:
        images: |
          ${{ env.MY_IMAGE_NAME }}

        labels: |
          io.artifacthub.package.readme-url=https://raw.githubusercontent.com/${{ github.repository }}/main/README.md
          org.opencontainers.image.description=${{ env.MY_IMAGE_DESC }}
          org.opencontainers.image.title=${{ env.MY_IMAGE_NAME }}
    
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag llmgradingwebapp:$(date +%s)

    - name: Lowercase Registry
      id: registry_case
      uses: ASzc/change-string-case-action@v6
      with:
        string: ${{ env.IMAGE_REGISTRY }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Image to GHCR
      uses: redhat-actions/push-to-registry@v2
      id: push
      env:
        REGISTRY_USER: ${{ github.actor }}
        REGISTRY_PASSWORD: ${{ github.token }}
      with:
        image: ${{ steps.build_image.outputs.image }}
        tags: ${{ steps.build_image.outputs.tags }}
        registry: ${{ steps.registry_case.outputs.lowercase }}
        username: ${{ env.REGISTRY_USER }}
        password: ${{ env.REGISTRY_PASSWORD }}
        extra-args: |
          --disable-content-trust
